TestCase subclass: #MyCircleTest	instanceVariableNames: ''	classVariableNames: ''	package: 'shapes'!!MyCircleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:01'!testarea	|c|	c := MyCircle radius:1.	self assert: c area equals:3.14.! !!MyCircleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:10'!testperimetre	|c|	c := MyCircle radius:1.	self assert: c perimetre equals:6.28.! !!MyCircleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:12'!testprintOn	|c|	c := MyCircle radius:1.	self assert: c asString equals:'(1)'.! !TestCase subclass: #MyRectangleTest	instanceVariableNames: ''	classVariableNames: ''	package: 'shapes'!!MyRectangleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:02'!testarea 		 |c|	c:=MyRectangle width: 10 length: 5.	self assert: c area equals:50.! !!MyRectangleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:10'!testperimetre		 |c|	c:=MyRectangle width: 10 length: 5.	self assert: c perimetre equals:30.! !!MyRectangleTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:11'!testprintOn	 |c|	c:=MyRectangle width: 10 length: 5.	self assert: c asString equals: '(10,5)'.! !Object subclass: #MyShape	instanceVariableNames: 'color isFilled'	classVariableNames: ''	package: 'shapes'!!MyShape methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 18:13'!initialize 	super initialize.	isFilled :=false.	color := 'Blue'.! !!MyShape methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 18:14'!area	^1! !!MyShape methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 18:14'!perimetre	^1! !MyShape subclass: #MyCircle	instanceVariableNames: 'radius'	classVariableNames: ''	package: 'shapes'!!MyCircle methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 17:43'!initialize	super initialize.	radius :=1.! !!MyCircle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 18:01'!area	^3.14*(radius**2)! !!MyCircle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:46'!radius	^radius! !!MyCircle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:46'!radius: aNumber	radius:=aNumber! !!MyCircle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 18:10'!perimetre	^2*(3.14*radius)! !!MyCircle methodsFor: 'printing' stamp: 'KenzaMakhlouf 10/6/2022 17:56'!printOn: aStream	aStream		nextPut: $(;		nextPutAll: radius asString;		nextPut: $).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyCircle class	instanceVariableNames: ''!!MyCircle class methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:48'!radius: aNumber	|c|	c :=MyCircle new.	c radius: aNumber.	^c! !MyShape subclass: #MyRectangle	instanceVariableNames: 'width length'	classVariableNames: ''	package: 'shapes'!!MyRectangle methodsFor: 'printing' stamp: 'KenzaMakhlouf 10/6/2022 17:55'!printOn: aStream	aStream		nextPut: $(;		nextPutAll: width asString;		nextPut: $,;		nextPutAll: length asString;		nextPut: $).! !!MyRectangle methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 17:43'!initialize	super initialize.	width :=1.	length :=1.! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 18:09'!perimetre	^2*(width+length)! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:45'!width: aNumber	width:=aNumber! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:45'!width	^width! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:45'!length: aNumber	length:=aNumber! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:42'!area	^width*length! !!MyRectangle methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:45'!length	^length! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyRectangle class	instanceVariableNames: ''!!MyRectangle class methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:49'!width: aNumber length: secNumber	|c|	c :=MyRectangle new.	c width: aNumber.	c length: secNumber.	^c! !MyRectangle subclass: #MySquare	instanceVariableNames: 'side'	classVariableNames: ''	package: 'shapes'!!MySquare methodsFor: 'printing' stamp: 'KenzaMakhlouf 10/6/2022 17:56'!printOn: aStream	aStream		nextPut: $(;		nextPutAll: side asString;		nextPut: $,;		nextPutAll: side asString;		nextPut: $).! !!MySquare methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 17:44'!side 	^side! !!MySquare methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 18:04'!initialize	super initialize.	width :=1.	side:=1.	length:=1.! !!MySquare methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 17:44'!side: aNumber	side:=aNumber.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MySquare class	instanceVariableNames: ''!!MySquare class methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 18:06'!side: aNumber	|c|	c :=MySquare new.	c side: aNumber.	c width: aNumber.	c length: aNumber.	^c! !TestCase subclass: #MySquareTest	instanceVariableNames: ''	classVariableNames: ''	package: 'shapes'!!MySquareTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:08'!testarea 		 |c|	c:=MySquare side: 5.	self assert: c area equals:25.! !!MySquareTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:05'!testperimetre	 |c|	c:=MySquare side: 5.	self assert: c perimetre equals:20.! !!MySquareTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 18:12'!testprintOn	|c|	c := MySquare side:1.	self assert: c asString equals:'(1,1)'.! !
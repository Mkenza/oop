Object subclass: #MyLine	instanceVariableNames: 'begin end'	classVariableNames: ''	package: 'points_lines'!!MyLine methodsFor: 'printing' stamp: 'KenzaMakhlouf 10/6/2022 17:07'!printOn: aStream 	super printOn: aStream.	aStream		nextPut: $(;		nextPutAll: begin x asString;		nextPut: $,;		nextPutAll: begin y asString;		nextPut: $);		nextPut: $-;		nextPut: $-;		nextPut: $>;		nextPut: $(;		nextPutAll: begin x asString;		nextPut: $,;		nextPutAll: begin y asString;		nextPut: $).! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:01'!initialize 	super initialize.	begin := MyPoint new.	end := MyPoint new.! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:00'!begin	^begin! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:02'!begin: aMyPoint 	begin := aMyPoint! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:01'!gradient 	^((end y - begin y)/(end x - begin x))! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:00'!end	^end! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:02'!end: aMyPoint 	end := aMyPoint! !!MyLine methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 17:01'!length 	^((begin x - end x)**2 + (begin y - end y)**2) sqrt! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyLine class	instanceVariableNames: ''!!MyLine class methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:00'!begin: firstPoint end: secondPoint 	|l|	l := MyLine new.	l begin: firstPoint .	l end: secondPoint .	^l! !TestCase subclass: #MyLineTest	instanceVariableNames: ''	classVariableNames: ''	package: 'points_lines'!!MyLineTest methodsFor: 'tests' stamp: 'KenzaMakhlouf 10/6/2022 17:23'!testPrintOn	|l pt1 pt2|	pt1 := MyPoint xs: 6 ys:7.	pt2 := MyPoint xs: 6 ys:7.	l := MyLine begin: pt1 end: pt2.	self assert: l asString equals: 'a MyLine(6,7)-->(6,7)'.! !!MyLineTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:32'!testgradientinvariance	|l l2 pt1 pt2|	pt1 := MyPoint xs: 6 ys:7.	pt2 := MyPoint xs: 5 ys:9.	l := MyLine begin: pt1 end: pt2.	l2 := MyLine begin: pt2 end: pt1.	self assert: (l gradient) equals: (l2 gradient).	! !!MyLineTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:30'!testgradienthorizontal	|l pt1 pt2|	pt1 := MyPoint xs: 6 ys:7.	pt2 := MyPoint xs: 5 ys:7.	l := MyLine begin: pt1 end: pt2.	self assert: (l gradient) equals: 0.	! !!MyLineTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:30'!testgradient	|l pt1 pt2|	pt1 := MyPoint xs: 6 ys:7.	pt2 := MyPoint xs: 5 ys:1.	l := MyLine begin: pt1 end: pt2.	self assert: (l gradient) equals: 6.	! !!MyLineTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:27'!testinitialize	|l|	l:= MyLine new.	self assert: l begin x equals: 0.	self assert: l end x equals: 0.	self assert: l begin y equals: 0.	self assert: l end y equals: 0.! !!MyLineTest methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 17:31'!testlength	|l pt1 pt2|	pt1 := MyPoint xs: 6 ys:7.	pt2 := MyPoint xs: 5 ys:1.	l := MyLine begin: pt1 end: pt2.	self assert: (l length) equals: 7.	! !Object subclass: #MyPoint	instanceVariableNames: 'x y'	classVariableNames: ''	package: 'points_lines'!!MyPoint methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 16:27'!y: aNumber 	y := aNumber ! !!MyPoint methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 16:56'!printOn: aStream 	super printOn: aStream.	aStream		nextPut: $(;		nextPutAll: x asString;		nextPut: $,;		nextPutAll: y asString;		nextPut: $).! !!MyPoint methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 16:24'!x	^x! !!MyPoint methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 16:24'!y	^y! !!MyPoint methodsFor: 'accessing' stamp: 'KenzaMakhlouf 10/6/2022 16:27'!x: aNumber 	x := aNumber ! !!MyPoint methodsFor: 'initialization' stamp: 'KenzaMakhlouf 10/6/2022 16:30'!initialize 	super initialize.	x:=0.	y:=0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyPoint class	instanceVariableNames: ''!!MyPoint class methodsFor: 'as yet unclassified' stamp: 'KenzaMakhlouf 10/6/2022 16:29'!xs: firstNumber ys: secondNumber 	|pt|	pt := MyPoint new.	pt x: firstNumber.	pt y: secondNumber.	^pt! !TestCase subclass: #MyPointTest	instanceVariableNames: ''	classVariableNames: ''	package: 'points_lines'!!MyPointTest methodsFor: 'tests' stamp: 'KenzaMakhlouf 10/6/2022 16:31'!testInitialize 		| pt |	pt := MyPoint new.	self assert: pt x equals: 0.	self assert: pt y equals: 0.! !!MyPointTest methodsFor: 'tests' stamp: 'KenzaMakhlouf 10/6/2022 17:23'!testPrintOn	|pt|	pt := MyPoint xs: 6 ys:7.	self assert: pt asString equals: 'a MyPoint(6,7)'.! !